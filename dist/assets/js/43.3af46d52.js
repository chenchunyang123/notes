(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{396:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("这种检测是争议比较大的。用户代理检测通过检测用户代理字符串来确定实际使用的浏览器。")]),t._v(" "),a("p",[t._v("在每一次 HTTP 请求过程中，用户代理字符串是作为响应首部发送的，而且该字符串可以通过 JavaScript 的 navigator.userAgent 属性访问在服务器端，通过检测用户代理字符串来确定用户使用的浏览器是一种常用而且广为接受的做法。而在客户端，用户代理检测一般被当作一种万不得已才用的做法，其优先级排在能力检测和（或）怪癖检测之后。")]),t._v(" "),a("h2",{attrs:{id:"用户代理字符串的历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户代理字符串的历史"}},[t._v("#")]),t._v(" 用户代理字符串的历史")]),t._v(" "),a("p",[t._v("各个浏览器的字符串没有统一的规则，详情见 P222")]),t._v(" "),a("h2",{attrs:{id:"用户代理字符串检测技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户代理字符串检测技术"}},[t._v("#")]),t._v(" 用户代理字符串检测技术")]),t._v(" "),a("p",[t._v("考虑到历史原因以及现代浏览器中用户代理字符串的使用方式，通过用户代理字符串来检测特定的浏览器并不是一件轻松的事。因此，首先要确定的往往是你需要多么具体的浏览器信息。一般情况下，知道呈现引擎和最低限度的版本就足以决定正确的操作方法了。")]),t._v(" "),a("p",[t._v("例如，下面代码不推荐：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isIE6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" isIE7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不推荐!!!")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这种代码其实是很脆弱的，因为它要依据特定的版本来决定做什么。如果是 IE8 怎么办呢？只要 IE 有新版本出来，就必须更新这些代码。推荐使用下面这种思想：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ieVer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样可以确保相应的代码将来照样能够起作用。")]),t._v(" "),a("p",[t._v("后面书上写了检测浏览器的过程，针对不同的浏览器及平台需要写很多代码（P229）。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("用户代理检测是客户端检测的最后一个选择，只要可能，都应该优先采用能力检测和怪癖检测。用户代理检测一般适用于下列情形。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不能直接准确地使用能力检测或怪癖检测。例如，某些浏览器实现了为将来功能预留的存根（stub）函数。在这种情况下，仅测试相应的函数是否存在还得不到足够的信息。")])]),t._v(" "),a("li",[a("p",[t._v("同一款浏览器在不同平台下具备不同的能力。这时候，可能就有必要确定浏览器位于哪个平台下。")])]),t._v(" "),a("li",[a("p",[t._v("为了跟踪分析等目的需要知道确切的浏览器。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);